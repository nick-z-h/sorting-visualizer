(this["webpackJsonpsorting-visualizer"]=this["webpackJsonpsorting-visualizer"]||[]).push([[0],{57:function(e,t,n){e.exports=n(68)},62:function(e,t,n){},63:function(e,t,n){},67:function(e,t,n){},68:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),o=n(10),i=n.n(o),s=(n(62),n(15)),l=n(44),c=n(45),u=n(51),m=n(52),v=(n(63),n(50)),d=n(96),h=n(97),g=n(100),p=n(101),y=n(102),f=n(108),b=n(110),E=n(109),w=n(103),B=n(69),S=n(104),I=n(105),T=n(111),k=n(106),M=n(107);function O(e){var t=[],n=e.slice();return function e(t,n,r,a,o){if(n===r)return;var i=Math.floor((n+r)/2);e(a,n,i,t,o),e(a,i+1,r,t,o),function(e,t,n,r,a,o){var i=t,s=t,l=n+1;for(;s<=n&&l<=r;)o.push([s,l]),o.push([s,l]),a[s]<=a[l]?(o.push([i,a[s]]),e[i++]=a[s++]):(o.push([i,a[l]]),e[i++]=a[l++]);for(;s<=n;)o.push([s,s]),o.push([s,s]),o.push([i,a[s]]),e[i++]=a[s++];for(;l<=r;)o.push([l,l]),o.push([l,l]),o.push([i,a[l]]),e[i++]=a[l++]}(t,n,i,r,a,o)}(e,0,e.length-1,n,t),t}function L(e){var t=[];return function e(t,n,r,a){var o;n<r&&(o=function(e,t,n,r){for(var a=e[n],o=t,i=t;i<=n-1;i++){if(r.push([i,n]),r.push([i,n]),e[i]<=a){r.push([i,e[o]]),r.push([o,e[i]]);var s=e[i];e[i]=e[o],e[o]=s,o++}else r.push([!1,!1]),r.push([!1,!1]);r.push([!1,!1]),r.push([!1,!1])}r.push([!1,!1]),r.push([!1,!1]),r.push([!1,!1]),r.push([!1,!1]),r.push([o,e[n]]),r.push([n,e[o]]);var l=e[o];return e[o]=e[n],e[n]=l,o}(t,n,r,a),e(t,n,o-1,a),e(t,o+1,r,a))}(e,0,e.length-1,t),t}var H=["Bubble Sort","Selection Sort","Insertion Sort","Merge Sort","Quick Sort"],A="Bubble Sort",C=100,x=1,N=150,z=!1,j=["DarkSlateBlue","DarkSlateGray","DodgerBlue","Gold","LightGreen","LightSlateGray","Orange","Turquoise"],D="DarkSlateBlue",q="Light",P=!1,Q=function(e){Object(m.a)(n,e);var t=Object(u.a)(n);function n(e){var r;return Object(l.a)(this,n),(r=t.call(this,e)).setAlgorithm=function(e){switch(A=e.target.value,e.target.value){case"Bubble Sort":document.getElementById("overview-title").innerHTML="Bubble Sort",document.getElementById("overview-text").innerHTML="Bubble sort is a simple sorting algorithm that repeatedly swaps adjacent elements if they are in the incorrect order, it is known as bubble sort, because with every complete iteration the largest element in the array, \u201cbubbles up\u201d towards the highest index of that array.",document.getElementById("overview-worst").innerHTML="O(n"+"2".sup()+")",document.getElementById("overview-average").innerHTML="O(n"+"2".sup()+")",document.getElementById("overview-best").innerHTML="O(n)",document.getElementById("overview-space").innerHTML="O(1)";break;case"Selection Sort":document.getElementById("overview-title").innerHTML="Selection Sort",document.getElementById("overview-text").innerHTML="Selection sort is an in-place comparison-based algorithm in which an array is divided into two parts, the sorted part, and the unsorted part. The smallest element is selected from the unsorted array and swapped with the leftmost element of the unsorted array, that element then becomes a part of the sorted array. This process continues until there are no elements in the unsorted part.",document.getElementById("overview-worst").innerHTML="O(n"+"2".sup()+")",document.getElementById("overview-average").innerHTML="O(n"+"2".sup()+")",document.getElementById("overview-best").innerHTML="O(n"+"2".sup()+")",document.getElementById("overview-space").innerHTML="O(1)";break;case"Insertion Sort":document.getElementById("overview-title").innerHTML="Insertion Sort",document.getElementById("overview-text").innerHTML="Insertion sort is an in-place comparison-based algorithm that builds the final sorted array one item at a time. At each iteration, insertion sort removes one element from the unsorted array, finds the location it belongs to within the sorted array, and inserts it there. This process repeats until no unsorted elements remain.",document.getElementById("overview-worst").innerHTML="O(n"+"2".sup()+")",document.getElementById("overview-average").innerHTML="O(n"+"2".sup()+")",document.getElementById("overview-best").innerHTML="O(n)",document.getElementById("overview-space").innerHTML="O(1)";break;case"Merge Sort":document.getElementById("overview-title").innerHTML="Merge Sort",document.getElementById("overview-text").innerHTML="Merge sort is a divide and conquer algorithm that continually divides an array into subarrays, until each subarray is composed of a single element. It then merges those subarrays to produce a sorted array.",document.getElementById("overview-worst").innerHTML="O(n log n)",document.getElementById("overview-average").innerHTML="O(n log n)",document.getElementById("overview-best").innerHTML="O(n log n)",document.getElementById("overview-space").innerHTML="O(n)";break;case"Quick Sort":document.getElementById("overview-title").innerHTML="Quick Sort",document.getElementById("overview-text").innerHTML="Quick sort is a divide and conquer algorithm. It selects a pivot, and partitions around that pivot, dividing the array into smaller sub-arrays. It continues to do this until the array is sorted.",document.getElementById("overview-worst").innerHTML="O(n"+"2".sup()+")",document.getElementById("overview-average").innerHTML="O(n log n)",document.getElementById("overview-best").innerHTML="O(n log n)",document.getElementById("overview-space").innerHTML="O(logn)";break;default:console.log("".concat(e.target.value," is invalid"))}r.forceUpdate()},r.setAnimationSpeed=function(e,t){C=t,x=-1*t+101,r.forceUpdate()},r.setNumberOfBars=function(e,t){N=t,r.randomizeArray()},r.setPrimaryColor=function(e){D=e.target.value,r.forceUpdate()},r.setThemeMode=function(e,t){P=t,q=t?"Dark":"Light",r.forceUpdate()},r.setIsSorting=function(){!1===(z=!z)&&r.forceUpdate()},r.state={visualizerArray:[]},r}return Object(c.a)(n,[{key:"componentDidMount",value:function(){this.randomizeArray(),document.getElementById("overview-title").innerHTML="Bubble Sort",document.getElementById("overview-text").innerHTML="Bubble sort is a simple sorting algorithm that repeatedly swaps adjacent elements if they are in the incorrect order, it is known as bubble sort, because with every complete iteration the largest element in the array, \u201cbubbles up\u201d towards the highest index of that array.",document.getElementById("overview-worst").innerHTML="O(n"+"2".sup()+")",document.getElementById("overview-average").innerHTML="O(n"+"2".sup()+")",document.getElementById("overview-best").innerHTML="O(n)",document.getElementById("overview-space").innerHTML="O(1)"}},{key:"sorter",value:function(e){switch(this.setIsSorting(),e){case"Bubble Sort":this.bubbleSort();break;case"Selection Sort":this.selectionSort();break;case"Insertion Sort":this.insertionSort();break;case"Merge Sort":this.mergeSort();break;case"Quick Sort":this.quickSort();break;default:console.log("".concat(e," is invalid"))}}},{key:"randomizeArray",value:function(){for(var e,t,n=[],r=0;r<N;r++)n.push((e=50,t=300,Math.floor(Math.random()*(t-e+1)+e)));this.setState({visualizerArray:n})}},{key:"bubbleSort",value:function(){var e=this;this.randomizeArray();for(var t=function(e){var t=[];return function(e,t){for(var n=e.length,r=!1,a=0;a<n-1;a++){r=!1;for(var o=0;o<n-a-1;o++)if(e[o]>e[o+1]){t.push([o,o+1]),t.push([o,o+1]),t.push([o,e[o+1]]),t.push([o+1,e[o]]);var i=e[o];e[o]=e[o+1],e[o+1]=i,r=!0}if(!1===r)break}}(e,t),t}(this.state.visualizerArray),n=0;n<t.length;n++){var r=n%4===0||n%4===1,a=document.getElementsByClassName("array-bar");r?function(){var e=n%4===0?"#f50057":D,r=Object(s.a)(t[n],2),o=r[0],i=r[1],l=a[o].style,c=a[i].style;setTimeout((function(){l.backgroundColor=e,c.backgroundColor=e}),n*x)}():function(){var e=Object(s.a)(t[n],2),r=e[0],o=e[1],i=a[r].style;setTimeout((function(){i.height="".concat(o,"px")}),n*x)}()}var o=parseInt(x*t.length);setTimeout((function(){return e.setIsSorting()}),o)}},{key:"selectionSort",value:function(){var e=this;this.randomizeArray();for(var t=function(e){var t=[];return function(e,t){for(var n=e.length,r=0;r<n-1;r++){for(var a=r,o=e[r],i=r+1;i<n;i++)t.push([r,i]),t.push([r,i]),t.push([!1,!1]),t.push([!1,!1]),e[i]<o&&(o=e[i],a=i);t.push([r,a]),t.push([r,a]),t.push([r,o]),t.push([a,e[r]]);var s=e[r];e[r]=o,e[a]=s}}(e,t),t}(this.state.visualizerArray),n=0;n<t.length;n++){var r=n%4===0||n%4===1,a=document.getElementsByClassName("array-bar");if(r)!function(){var e=n%4===0?"#f50057":D,r=Object(s.a)(t[n],2),o=r[0],i=r[1],l=a[o].style,c=a[i].style;setTimeout((function(){l.backgroundColor=e,c.backgroundColor=e}),n*x)}();else if("continue"===function(){var e=Object(s.a)(t[n],2),r=e[0],o=e[1];if(!1===r)return"continue";var i=a[r].style;setTimeout((function(){i.height="".concat(o,"px")}),n*x)}())continue}var o=parseInt(x*t.length);setTimeout((function(){return e.setIsSorting()}),o)}},{key:"insertionSort",value:function(){var e=this;this.randomizeArray();for(var t=function(e){var t=[];return function(e,t){for(var n=0;n<e.length;n++)for(var r=n;r>0;r--)if(e[r]<e[r-1]){t.push([r,r-1]),t.push([r,r-1]),t.push([r,e[r-1]]),t.push([r-1,e[r]]);var a=e[r];e[r]=e[r-1],e[r-1]=a}}(e,t),t}(this.state.visualizerArray),n=0;n<t.length;n++){var r=n%4===0||n%4===1,a=document.getElementsByClassName("array-bar");r?function(){var e=n%4===0?"#f50057":D,r=Object(s.a)(t[n],2),o=r[0],i=r[1],l=a[o].style,c=a[i].style;setTimeout((function(){l.backgroundColor=e,c.backgroundColor=e}),n*x)}():function(){var e=Object(s.a)(t[n],2),r=e[0],o=e[1],i=a[r].style;setTimeout((function(){i.height="".concat(o,"px")}),n*x)}()}var o=parseInt(x*t.length);setTimeout((function(){return e.setIsSorting()}),o)}},{key:"mergeSort",value:function(){var e=this;this.randomizeArray();for(var t=O(this.state.visualizerArray),n=function(e){var n=document.getElementsByClassName("array-bar");if(e%3!==2){var r=Object(s.a)(t[e],2),a=r[0],o=r[1],i=n[a].style,l=n[o].style,c=e%3===0?"#f50057":D;setTimeout((function(){i.backgroundColor=c,l.backgroundColor=c}),e*x)}else setTimeout((function(){var r=Object(s.a)(t[e],2),a=r[0],o=r[1];n[a].style.height="".concat(o,"px")}),e*x)},r=0;r<t.length;r++)n(r);var a=parseInt(x*t.length);setTimeout((function(){return e.setIsSorting()}),a)}},{key:"quickSort",value:function(){var e=this;this.randomizeArray();for(var t=L(this.state.visualizerArray),n=0;n<t.length;n++){var r=n%6===0||n%6===1,a=document.getElementsByClassName("array-bar");if(r){if("continue"===function(){var e=n%6===0?"#f50057":D,r=Object(s.a)(t[n],2),o=r[0],i=r[1];if(!1===o)return"continue";var l=a[o].style,c=a[i].style;setTimeout((function(){l.backgroundColor=e,c.backgroundColor=e}),n*x)}())continue}else if("continue"===function(){var e=Object(s.a)(t[n],2),r=e[0],o=e[1];if(!1===r)return"continue";var i=a[r].style;setTimeout((function(){i.height="".concat(o,"px")}),n*x)}())continue}var o=parseInt(x*t.length);setTimeout((function(){return e.setIsSorting()}),o)}},{key:"render",value:function(){var e=this,t=this.state.visualizerArray,n={color:"".concat(D)},r={background:"".concat(D)},o=Object(v.a)({palette:{type:"dark"}}),i=Object(v.a)({palette:{type:"light"}});return a.a.createElement("div",null,a.a.createElement(d.a,{theme:P?o:i},a.a.createElement(h.a,{style:r,position:"static"},a.a.createElement(g.a,null,a.a.createElement(p.a,{variant:"h6"},"Sorting Visualizer"),a.a.createElement("div",{className:"theme-section"},a.a.createElement(y.a,{disabled:z},a.a.createElement(p.a,null,"Select a Color"),a.a.createElement(f.a,{style:{color:"white"},value:D,onChange:this.setPrimaryColor},j.map((function(e){return a.a.createElement(b.a,{value:e,key:e},e)})))),a.a.createElement("div",null,a.a.createElement(p.a,null,q),a.a.createElement(E.a,{disabled:z,color:"secondary",onChange:this.setThemeMode}))))),a.a.createElement(w.a,null),a.a.createElement(B.a,{elevation:3,className:"array-container"},t.map((function(e,t){return a.a.createElement("div",{className:"array-bar",key:t,style:{backgroundColor:D,height:"".concat(e,"px"),width:"".concat(1e3/N,"px")}})}))),a.a.createElement(S.a,{container:!0},a.a.createElement(S.a,{item:!0,sm:4},a.a.createElement(B.a,{elevation:3,className:"Paper"},a.a.createElement(I.a,null,a.a.createElement(p.a,{align:"left"},"Select a Algorithm"),a.a.createElement(y.a,{className:"menu-dropdown",disabled:z},a.a.createElement(f.a,{value:A,onChange:this.setAlgorithm},H.map((function(e){return a.a.createElement(b.a,{value:e,key:e},e)})))),a.a.createElement(p.a,{align:"left"},"Speed"),a.a.createElement(T.a,{style:n,value:C,onChange:this.setAnimationSpeed,disabled:z,min:1,max:100,valueLabelDisplay:"auto"}),a.a.createElement(p.a,{align:"left"},"Number of Bars"),a.a.createElement(T.a,{style:n,value:N,onChange:this.setNumberOfBars,disabled:z,min:5,max:150,valueLabelDisplay:"auto"})),a.a.createElement(k.a,null,a.a.createElement("div",{className:"menu-button"},a.a.createElement(M.a,{disabled:z,onClick:function(){return e.sorter(A)}},"Sort"))))),a.a.createElement(S.a,{item:!0,sm:5},a.a.createElement(B.a,{elevation:3,className:"Paper overview-container"},a.a.createElement("div",{className:"overview-section"},a.a.createElement(p.a,null,a.a.createElement("strong",{id:"overview-title"},"Select an algorithm in the dropdown menu")),a.a.createElement(p.a,{id:"overview-text"})))),a.a.createElement(S.a,{item:!0,sm:3},a.a.createElement(B.a,{elevation:3,className:"Paper overview-container"},a.a.createElement("div",{className:"overview-aside"},a.a.createElement(p.a,null,"Worst-case time complexity: ",a.a.createElement("span",{id:"overview-worst"},"N/A")),a.a.createElement(p.a,null,"Average time complexity: ",a.a.createElement("span",{id:"overview-average"},"N/A")),a.a.createElement(p.a,null,"Best-case time complexity: ",a.a.createElement("span",{id:"overview-best"},"N/A")),a.a.createElement(p.a,null,"Worst-case space complexity: ",a.a.createElement("span",{id:"overview-space"},"N/A"))))))))}}]),n}(a.a.Component);n(67);var U=function(){return a.a.createElement("div",{className:"App"},a.a.createElement(Q,null))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(a.a.createElement(a.a.StrictMode,null,a.a.createElement(U,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}},[[57,1,2]]]);
//# sourceMappingURL=main.8bd5e07f.chunk.js.map